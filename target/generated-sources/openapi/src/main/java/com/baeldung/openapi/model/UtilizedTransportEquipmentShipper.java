package com.baeldung.openapi.model;

import java.net.URI;
import java.util.Objects;
import com.baeldung.openapi.model.CustomsReference;
import com.baeldung.openapi.model.Reference;
import com.baeldung.openapi.model.RequiredEquipment;
import com.baeldung.openapi.model.Seal;
import com.baeldung.openapi.model.UTEquipment;
import com.baeldung.openapi.model.UTEquipmentReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;


@JsonIgnoreProperties(
  value = "isShipperOwned", // ignore manually set isShipperOwned, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the isShipperOwned to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "isShipperOwned", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = UTEquipmentReference.class, name = "False"),
  @JsonSubTypes.Type(value = UTEquipment.class, name = "True"),
  @JsonSubTypes.Type(value = UTEquipment.class, name = "UTEquipment"),
  @JsonSubTypes.Type(value = UTEquipmentReference.class, name = "UTEquipmentReference"),
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-09-30T15:24:55.896324973+02:00[Europe/Paris]", comments = "Generator version: 7.8.0")
public interface UtilizedTransportEquipmentShipper {
    public Boolean getIsShipperOwned();
}
